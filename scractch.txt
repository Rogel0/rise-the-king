#include<iostream>
#include<conio.h>
#include<stdlib.h>
#include<graphics.h>
#include "scratch_2.cpp"


void movement(int border)
{
	input = getch();

		
		setbkcolor(BLUE);
		setcolor(WHITE);
		rectangle(x, y, x + 50, y + 50);
	
		//navigation
		switch(input)
		{
			case UP:
				if(table[row-1][col] == 0) //if going to empty space, move
				{
					row--;
					y -= 50;
				}
				else if(table[row-1][col] == 2 && table[row-2][col] == 0) // if box pushable, move box, move
				{
					table[row-1][col] = 0;
					setfillstyle(1,BLACK);
					bar(col * 50 + 51, (row-1) * 50 + 51, col * 50 + 100, (row-1) * 50 + 100);
					box(col,row-2);
					
					row--;
					y -= 50;
				}
				break;
			
			case DOWN:
				if(table[row+1][col] == 0)
				{
					row++;
					y += 50;
				}
				else if(table[row+1][col] == 2 && table[row+2][col] == 0) 
				{
					table[row+1][col] = 0;
					setfillstyle(1,BLACK);
					bar(col * 50 + 51, (row+1) * 50 + 51, col * 50 + 100, (row+1) * 50 + 100);
					box(col,row+2);
					
					row++;
					y += 50;
				}
				break;
			
			case LEFT:
				if(table[row][col-1] == 0)
				{
					col--;
					x -= 50;
				}
				else if(table[row][col-1] == 2 && table[row][col-2] == 0)
				{
					table[row][col-1] = 0;
					setfillstyle(1,BLACK);
					bar((col-1) * 50 + 51, row * 50 + 51, (col-1) * 50 + 100, row * 50 + 100);
					box(col-2,row);
					
					col--;
					x -= 50;
				}
				break;
			
			case RIGHT: 
				if(table[row][col+1] == 0)
				{
					col++;
					x += 50;
				}
				else if(table[row][col+1] == 2 && table[row][col+2] == 0)
				{
					table[row][col+1] = 0;
					setfillstyle(1,BLACK);
					bar((col+1) * 50 + 51, row * 50 + 51, (col+1) * 50 + 100, row * 50 + 100);
					box(col+2,row);
					
					col++;
					x += 50;
				}
				break;
		}
		
		//boundary
		if(row < 0)
        {
            row = 0;
			y = 50;
        }
        else if(row > 6)
        {
            row = 6;
			y = 350;
        }
		if(col < 0)
        {
            col = 0;
			x = 50;
        }
        else if(col > 6)
        {
            col = 6;
			x = 350;
        }
        
        setfillstyle(1,GREEN);
		for(int i=0;i<border;i++)
		{
			bar(xprev + 1 + i, yprev + 1 + i, xprev + 49 - i, yprev + 49 - i);
		}
		setcolor(BLUE);
        for(int i=0;i<border;i++)
		{
			if(i == border - 1)
			{
				setcolor(WHITE);
			}
			rectangle(x + 1 + i, y + 1 + i, x + 49 - i, y + 49 - i);
		}
		xprev = x;
		yprev = y;
}

main(){
	int level = 0;
	initG();
    
    level1();
    
    int border = 4;
    

	do
	{
	
		progView();
		//level increment
		if(level == 0 && (table[0][0] == 2) && (table[6][0] == 2) && (table[6][6] == 2) && (table[0][6] == 2))
		{
		    
			    clear();
			    level2();
			    level++;
		        
		}
		if(level == 1 && (table[1][5] == 2) && (table[2][5] == 2) && (table[4][6] == 2) && (table[6][6] == 2))
		{
			clear();
			//level3();
			level++;
		}
		
		//movement rules
		movement(border);
		
	}while(input != 27);
	getch();
	return 0;

	
	
	getch();
	return 0;
}
